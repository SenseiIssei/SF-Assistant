name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Build and package (Windows)
        shell: pwsh
        run: |
          ./release_windows.ps1
      - name: Upload release artifacts
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.zip
            dist/*.sha256

  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Ensure scripts executable
        run: chmod +x release_mac.sh
      - name: Install extra targets (macOS)
        run: rustup target add x86_64-apple-darwin aarch64-apple-darwin
      - name: Build and package (macOS)
        env:
          TARGETS: "x86_64-apple-darwin aarch64-apple-darwin"
        run: ./release_mac.sh
      - name: Upload release artifacts
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.zip
            dist/*.sha256*

  build-linux:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Ensure scripts executable
        run: chmod +x release_linux.sh
      - name: Install cross linker for aarch64
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu
      - name: Install extra targets (Linux)
        run: rustup target add x86_64-unknown-linux-gnu aarch64-unknown-linux-gnu
      - name: Build and package (Linux)
        env:
          TARGETS: "x86_64-unknown-linux-gnu aarch64-unknown-linux-gnu"
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        run: ./release_linux.sh
      - name: Upload release artifacts
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.tar.gz
            dist/*.sha256*
